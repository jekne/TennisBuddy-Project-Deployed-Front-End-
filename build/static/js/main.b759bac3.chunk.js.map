{"version":3,"sources":["store/user/selectors.js","components/Navigation/NavbarItem.js","config/constants.js","store/appState/actions.js","store/user/actions.js","components/Navigation/LoggedIn.js","components/Navigation/LoggedOut.js","components/Navigation/index.js","components/Loading/index.js","store/appState/selectors.js","components/MessageBox/index.js","store/locations/selectors.js","store/locations/actions.js","pages/SignUp/index.js","pages/Login/index.js","components/DisplayHomePageCard/DisplayHomePageCard.js","pages/HomePage/HomePage.js","store/clubs/selectors.js","components/ClubsCard/ClubCards.js","pages/Clubs/Clubs.js","store/clubs/actions.js","components/Forms/FormEditProfile.js","components/UserProfileCard/UserProfileCard.js","pages/UserProfile/UserProfile.js","store/players/actions.js","pages/Levels/Levels.js","store/stories/actions.js","store/stories/selectors.js","pages/PlayerDetails/PlayerDetails.js","store/chats/selector.js","pages/Chats/Chats.js","store/chats/actions.js","App.js","serviceWorker.js","store/appState/reducer.js","store/user/reducer.js","store/clubs/reducer.js","store/matches/reducer.js","store/players/reducer.js","store/stories/reducer.js","store/locations/reducer.js","store/chats/reducer.js","store/rootReducer.js","store/index.js","index.js"],"names":["selectToken","state","user","token","selectUser","selectAllUsers","players","SelectAllLevels","levels","selectUsersById","playerById","NavbarItem","props","Nav","Item","className","Link","as","NavLink","to","path","linkText","apiUrl","process","API_URL","APP_LOADING","APP_DONE_LOADING","SET_MESSAGE","CLEAR_MESSAGE","appLoading","type","appDoneLoading","clearMessage","setMessage","variant","dismissable","text","payload","showMessageWithTimeout","timeOutMilliSeconds","dispatch","setTimeout","LOGIN_SUCCESS","TOKEN_STILL_VALID","LOG_OUT","loginSuccess","userWithToken","id","logOut","fetchAllPlayers","getState","a","axios","get","response","users","data","fetchAllLevels","ShowPlayerByID","showPlayer","LoggedIn","useDispatch","useSelector","style","padding","name","Button","onClick","LoggedOut","Navigation","loginLogoutControls","Navbar","Brand","Toggle","Collapse","width","fill","Loading","Spinner","animation","role","selectAppLoading","appState","loading","selectMessage","message","MessageBox","showMessage","Alert","show","dismissible","onClose","selectAlllocations","locations","fetchAllLocations","localStorage","getItem","headers","Authorization","console","log","SignUp","navigate","useNavigate","useState","set_Name","description","set_Description","email","set_Email","password","set_Password","age","set_Age","gender","set_Gender","imageUrl","set_ImageUrl","location","set_Location","telephone","set_Telephone","locationsSelector","useEffect","Container","Form","Col","md","span","offset","Row","form","FormGroup","value","onChange","event","target","placeholder","e","parseInt","map","locati","city","check","row","sm","src","alt","Group","preventDefault","post","signUp","setEmail","setPassword","controlId","Label","Control","required","login","textAlign","DisplayHomePageCard","Card","Img","Body","Title","Text","ListGroup","ListGroupItem","levelId","compareLevel","Level_A","Leve_B","level","levelRateFixed","compareGender","Boolean_A","Boolean_B","HomePage","sortBy","set_sort_By","sortedPlayers","setSortedPlayers","selectedLevel","setSelectedLevel","playersSorted","sort","filter","player","includes","locationId","for","parseFloat","lev","length","selectClubs","club","clubs","ClubCards","adress","zipCode","rateClub","window","href","webSite","Clubs","x","FormEditProfile","set_location","marginTop","put","reload","usersWillBeUpdate","marginBottom","UserProfileCard","UserProfile","levelPlayerById","Levels","userLogged","set_Check","margin","InputGroup","Checkbox","height","levelUpdate","newStory","content","fetchStories","stories","selectStoriesByPlayer","PlayerDetails","useParams","set_Content","formHidden","set_FormHidden","details","tag","createNewStory","story","selectChatSender","chats","Chat","book","setBook","sender","chatsById","fetchChatsById","chatsByIdReceiver","fetchChatsByIdReceiver","marginLeft","Box","component","sx","m","noValidate","autoComplete","TextField","label","multiline","rows","App","isLoading","userWithoutToken","exact","element","Boolean","hostname","match","initialState","matches","matchesPlayed","matchesPlayedPicture","sets","combineReducers","action","setItem","removeItem","userById","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","ReduxThunk","store","createStore","reducer","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.b759bac3.chunk.js","sourcesContent":["export const selectToken = (state) => state.user.token;\n\nexport const selectUser = (state) => state.user;\n\nexport const selectAllUsers = (state) => state.user.players;\n\nexport const SelectAllLevels = (state) => state.user.levels;\n\nexport const selectUserMatches = (state) => state.user.match;\n\nexport const selectAllUsersLocations = (state) => state.user.location;\n\nexport const selectUsersById = (state) => state.user.playerById;\n\nexport const selectUserVictories = (state) => state.user.matchesWinner;\n","import React from \"react\";\nimport Nav from \"react-bootstrap/Nav\";\nimport { NavLink } from \"react-router-dom\";\n\nexport default function NavbarItem(props) {\n  return (\n    <Nav.Item className=\"navBarText\">\n      <strong>\n        {\" \"}\n        <Nav.Link as={NavLink} to={props.path}>\n          {props.linkText}\n        </Nav.Link>{\" \"}\n      </strong>\n    </Nav.Item>\n  );\n}\n","export const apiUrl = process.env.API_URL || \"http://localhost:4000\";\nexport const DEFAULT_MESSAGE_TIMEOUT = 3000;\n","import { DEFAULT_MESSAGE_TIMEOUT } from \"../../config/constants\";\n\nexport const APP_LOADING = \"APP_LOADING\";\nexport const APP_DONE_LOADING = \"APP_DONE_LOADING\";\nexport const SET_MESSAGE = \"SET_MESSAGE\";\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\n\nexport const appLoading = () => ({ type: APP_LOADING });\nexport const appDoneLoading = () => ({ type: APP_DONE_LOADING });\nexport const clearMessage = () => ({ type: CLEAR_MESSAGE });\n\nexport const setMessage = (variant, dismissable, text) => {\n  return {\n    type: SET_MESSAGE,\n    payload: {\n      variant,\n      dismissable,\n      text\n    }\n  };\n};\n\nexport const showMessageWithTimeout = (\n  variant,\n  dismissable,\n  text,\n  timeOutMilliSeconds\n) => {\n  return dispatch => {\n    dispatch(setMessage(variant, dismissable, text));\n\n    const timeout = timeOutMilliSeconds || DEFAULT_MESSAGE_TIMEOUT;\n\n    setTimeout(() => dispatch(clearMessage()), timeout);\n  };\n};\n","import { apiUrl } from \"../../config/constants\";\nimport axios from \"axios\";\nimport { selectToken } from \"./selectors\";\nimport {\n  appLoading,\n  appDoneLoading,\n  showMessageWithTimeout,\n  setMessage,\n} from \"../appState/actions\";\n\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const TOKEN_STILL_VALID = \"TOKEN_STILL_VALID\";\nexport const LOG_OUT = \"LOG_OUT\";\n\nconst loginSuccess = (userWithToken) => {\n  return {\n    type: LOGIN_SUCCESS,\n    payload: userWithToken,\n  };\n};\n\nconst tokenStillValid = (userWithoutToken) => ({\n  type: TOKEN_STILL_VALID,\n  payload: userWithoutToken,\n});\n\nconst displayPlayers = (data) => {\n  return {\n    type: \"USER/displayPlayers\",\n    payload: data,\n  };\n};\nconst displayLevels = (data) => {\n  return {\n    type: \"USER/displayLevels\",\n    payload: data,\n  };\n};\n\nconst displayMatches = (data) => {\n  return {\n    type: \"USER/displayMatches\",\n    payload: data,\n  };\n};\n\nconst displayWinner = (data) => {\n  return {\n    type: \"USER/displayWinner\",\n    payload: data,\n  };\n};\n\nexport function playerById(id) {\n  return {\n    type: \"USER/playerById\",\n    payload: id,\n  };\n}\nexport const logOut = () => ({ type: LOG_OUT });\n\nexport const signUp = (\n  name,\n  age,\n  description,\n  email,\n  gender,\n  imageUrl,\n  location,\n  telephone,\n  password\n) => {\n  return async (dispatch, getState) => {\n    dispatch(appLoading());\n    console.log(\"What it is my location\", location);\n    try {\n      const response = await axios.post(`${apiUrl}/auth/signup`, {\n        name,\n        age,\n        description,\n        email,\n        gender,\n        imageUrl,\n        telephone,\n        location,\n        password,\n      });\n\n      dispatch(loginSuccess(response.data));\n      dispatch(showMessageWithTimeout(\"success\", true, \"account created\"));\n      dispatch(appDoneLoading());\n    } catch (error) {\n      if (error.response) {\n        console.log(error.response.data.message);\n        dispatch(setMessage(\"danger\", true, error.response.data.message));\n      } else {\n        console.log(error.message);\n        dispatch(setMessage(\"danger\", true, error.message));\n      }\n      dispatch(appDoneLoading());\n    }\n  };\n};\n\nexport const login = (email, password) => {\n  return async (dispatch, getState) => {\n    dispatch(appLoading());\n    try {\n      const response = await axios.post(`${apiUrl}/auth/login`, {\n        email,\n        password,\n      });\n\n      dispatch(loginSuccess(response.data));\n      dispatch(showMessageWithTimeout(\"success\", false, \"welcome back!\", 1500));\n      dispatch(appDoneLoading());\n    } catch (error) {\n      if (error.response) {\n        console.log(error.response.data.message);\n        dispatch(setMessage(\"danger\", true, error.response.data.message));\n      } else {\n        console.log(error.message);\n        dispatch(setMessage(\"danger\", true, error.message));\n      }\n      dispatch(appDoneLoading());\n    }\n  };\n};\n\nexport const getUserWithStoredToken = () => {\n  return async (dispatch, getState) => {\n    // get token from the state\n    const token = selectToken(getState());\n\n    // if we have no token, stop\n    if (token === null) return;\n\n    dispatch(appLoading());\n    try {\n      // if we do have a token,\n      // check wether it is still valid or if it is expired\n      const response = await axios.get(`${apiUrl}/auth/me`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n\n      // token is still valid\n      dispatch(tokenStillValid(response.data));\n      dispatch(appDoneLoading());\n    } catch (error) {\n      if (error.response) {\n        console.log(error.response.message);\n      } else {\n        console.log(error);\n      }\n      // if we get a 4xx or 5xx response,\n      // get rid of the token by logging out\n      dispatch(logOut());\n      dispatch(appDoneLoading());\n    }\n  };\n};\n\n//FETCH ALL THE PLAYERS\nexport function fetchAllPlayers() {\n  return async function thunk(dispatch, getState) {\n    try {\n      const response = await axios.get(`${apiUrl}/users`);\n\n      const users = response.data.users;\n\n      dispatch(displayPlayers(users));\n    } catch (e) {}\n  };\n}\n\n//FETCH ALL LEVELS\nexport function fetchAllLevels() {\n  return async function thunk(dispatch, getState) {\n    try {\n      const response = await axios.get(`${apiUrl}/levels`);\n\n      const levels = response.data;\n\n      dispatch(displayLevels(levels));\n    } catch (e) {}\n  };\n}\n\n//UPDATE THE USERS\nexport function userToUpdate(data) {\n  return {\n    type: \"USERS/userToUpdate\",\n    payload: data,\n  };\n}\n\nexport function usersWillBeUpdate({\n  name,\n  age,\n  description,\n  email,\n  gender,\n  imageUrl,\n  levelId,\n  location,\n  telephone,\n  password,\n}) {\n  return async function thunk(dispatch, getState) {\n    try {\n      const { user } = getState();\n      const id = user.id;\n      const token = localStorage.getItem(\"token\");\n\n      const response = await axios.put(\n        `${apiUrl}/users/update/${id}`,\n        {\n          name,\n          age,\n          description,\n          email,\n          gender,\n          imageUrl,\n          levelId,\n          location,\n          telephone,\n          password,\n        },\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n\n      dispatch(userToUpdate(response.data));\n      console.log(\"response from backend\", response.data);\n      window.location.reload();\n    } catch (e) {}\n  };\n}\n\n//FETCH THE MATCHE BY ID\nexport function fetchMatchById() {\n  return async function thunk(dispatch, getState) {\n    try {\n      const { user } = getState();\n\n      const userId = user.id;\n\n      const response = await axios.get(`${apiUrl}/users/${userId}`);\n\n      const matches = response.data;\n\n      dispatch(displayMatches(matches));\n    } catch (e) {}\n  };\n}\n\n//FETCH THE WINNER BY ID\nexport function fetchWinner() {\n  return async function thunk(dispatch, getState) {\n    try {\n      const { user } = getState();\n      const userId = user.id;\n\n      const response = await axios.get(`${apiUrl}/matches/${userId}`);\n\n      const winner = response.data;\n\n      dispatch(displayWinner(winner));\n    } catch (e) {}\n  };\n}\n\nexport function ShowPlayerByID(id) {\n  return async function thunk(dispatch, getState) {\n    try {\n      const response = await axios.get(`${apiUrl}/users/details/${id}`);\n\n      const showPlayer = response.data.users;\n\n      dispatch(playerById(showPlayer));\n    } catch (e) {}\n  };\n}\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logOut } from \"../../store/user/actions\";\nimport Button from \"react-bootstrap/Button\";\nimport { selectUser } from \"../../store/user/selectors\";\nimport Nav from \"react-bootstrap/Nav\";\n\nexport default function LoggedIn() {\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n  return (\n    <>\n      <strong>\n        {\" \"}\n        <Nav.Item\n          className=\"NamePlayerTopPage\"\n          style={{ padding: \".5rem 1rem\" }}\n        >\n          {user.name}\n        </Nav.Item>\n      </strong>\n      <Button onClick={() => dispatch(logOut())}>Logout</Button>\n    </>\n  );\n}\n","import React from \"react\";\nimport NavbarItem from \"./NavbarItem\";\n\nexport default function LoggedOut() {\n  return (\n    <>\n      <NavbarItem path=\"/login\" linkText=\"Login\" />\n    </>\n  );\n}\n","import React from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport { NavLink } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { selectToken } from \"../../store/user/selectors\";\nimport NavbarItem from \"./NavbarItem\";\nimport LoggedIn from \"./LoggedIn\";\nimport LoggedOut from \"./LoggedOut\";\n\nexport default function Navigation() {\n  const token = useSelector(selectToken);\n\n  const loginLogoutControls = token ? <LoggedIn /> : <LoggedOut />;\n\n  return (\n    <Navbar className=\"colorNavBar\">\n      <Navbar.Brand as={NavLink} to=\"/\">\n        <strong>\n          {\" \"}\n          <strong className=\"tennisBuddyLogo\"> TENNIS BUDDY 🎾 </strong>\n        </strong>\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav style={{ width: \"100%\" }} fill>\n          {\" \"}\n          <NavbarItem path=\"/\" linkText=\"🎾 Home 🎾\" />\n          {!token ? (\n            \"\"\n          ) : (\n            <>\n              <NavbarItem path=\"/clubs\" linkText=\"🎾 Clubs 🎾\" />\n              <NavbarItem path=\"/levels\" linkText=\"🎾 Levels 🎾\" />\n              <NavbarItem path=\"/chats\" linkText=\"🎾 Chat 🎾\" />\n              {/* <NavbarItem path=\"/matches\" linkText=\"🎾 Matches 🎾\" /> */}\n              <NavbarItem path=\"/uprofile\" linkText=\"🎾 Your Profile 🎾\" />\n            </>\n          )}\n          {loginLogoutControls}\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n","import React from \"react\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport \"./spinner.css\";\n\nexport default function Loading() {\n  return (\n    <div className=\"loading_spinner\">\n      <Spinner animation=\"border\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </Spinner>\n    </div>\n  );\n}\n","export const selectAppLoading = state => state.appState.loading;\nexport const selectMessage = state => state.appState.message;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectMessage } from \"../../store/appState/selectors\";\nimport { Alert } from \"react-bootstrap\";\nimport { clearMessage } from \"../../store/appState/actions\";\n\nexport default function MessageBox() {\n  const message = useSelector(selectMessage);\n  const dispatch = useDispatch();\n  const showMessage = message !== null;\n  if (!showMessage) return null;\n\n  return (\n    <Alert\n      show={showMessage}\n      variant={message.variant}\n      dismissible={message.dismissable}\n      onClose={message.dismissable ? () => dispatch(clearMessage()) : null}\n    >\n      {message.text}\n    </Alert>\n  );\n}\n","export const selectAlllocations = (state) => state.locations.locations;\n","import { apiUrl } from \"../../config/constants\";\nimport axios from \"axios\";\n\nexport function allLocations(data) {\n  return {\n    type: \"LOCATIONS/selectAllLocations\",\n    payload: data,\n  };\n}\n\nexport function fetchAllLocations() {\n  return async function thunk(dispatch, getState) {\n    try {\n      const token = localStorage.getItem(\"token\");\n\n      const response = await axios.get(\n        `${apiUrl}/locations`,\n\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n      console.log(\"response from thunk\", response.data);\n\n      const locations = response.data;\n\n      dispatch(allLocations(locations));\n    } catch (e) {}\n  };\n}\n","import React, { useState, useEffect } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport { signUp } from \"../../store/user/actions\";\nimport { selectToken } from \"../../store/user/selectors\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { Col } from \"react-bootstrap\";\nimport { Row, FormGroup } from \"react-bootstrap\";\nimport { Input, Label } from \"reactstrap\";\nimport { selectAlllocations } from \"../../store/locations/selectors\";\nimport { fetchAllLocations } from \"../../store/locations/actions\";\n\nexport default function SignUp() {\n  // const [name, setName] = useState(\"\");\n  // const [email, setEmail] = useState(\"\");\n  // const [password, setPassword] = useState(\"\");\n  const dispatch = useDispatch();\n  const token = useSelector(selectToken);\n  const navigate = useNavigate();\n\n  const [name, set_Name] = useState(\"\");\n  const [description, set_Description] = useState(\"\");\n  const [email, set_Email] = useState(\"\");\n  const [password, set_Password] = useState(\"\");\n  const [age, set_Age] = useState(\"\");\n  const [gender, set_Gender] = useState(false);\n  const [imageUrl, set_ImageUrl] = useState(\"\");\n  // const [levelId, set_LevelId] = useState(\"\");\n  const [location, set_Location] = useState(null);\n  const [telephone, set_Telephone] = useState(\"\");\n  const locationsSelector = useSelector(selectAlllocations);\n  console.log(\"location selector\", locationsSelector);\n  useEffect(() => {\n    if (token !== null) {\n      navigate(\"/levels\");\n    }\n  }, [token, navigate]);\n\n  function submitForm(event) {\n    event.preventDefault();\n\n    dispatch(\n      signUp(\n        name,\n        age,\n        description,\n        email,\n        gender,\n        imageUrl,\n        location,\n        telephone,\n        password\n      )\n    );\n\n    // set_Email(\"\");\n    // set_Password(\"\");\n    // set_Name(\"\");\n  }\n  useEffect(() => {\n    dispatch(fetchAllLocations());\n  }, []);\n\n  return (\n    <Container>\n      <Form as={Col} md={{ span: 6, offset: 3 }} className=\"mt-5\">\n        <h1 className=\"mt-5 mb-5\">Signup</h1>\n        <Form>\n          <Row form>\n            <FormGroup>\n              <Label>\n                <strong>Name</strong>\n              </Label>\n              <Input\n                // placeholder={name}\n                value={name}\n                onChange={(event) => set_Name(event.target.value)}\n              />\n            </FormGroup>\n            <Col md={6}>\n              <FormGroup>\n                <Label>\n                  {\" \"}\n                  <strong>Email </strong>\n                </Label>\n                <Input\n                  type=\"email\"\n                  placeholder={email}\n                  value={email}\n                  onChange={(event) => set_Email(event.target.value)}\n                />\n              </FormGroup>\n            </Col>\n            <Col md={6}>\n              <FormGroup>\n                <Label>\n                  {\" \"}\n                  <strong> Password </strong>\n                </Label>\n                <Input\n                  type=\"password\"\n                  placeholder={password}\n                  value={password}\n                  onChange={(event) => set_Password(event.target.value)}\n                />\n              </FormGroup>\n            </Col>\n          </Row>\n\n          <Row form>\n            <FormGroup>\n              <Label>\n                {\" \"}\n                <strong> Location </strong>\n              </Label>\n              <Input\n                id=\"exampleSelect\"\n                name=\"select\"\n                type=\"select\"\n                value={location}\n                onChange={(e) => {\n                  set_Location(parseInt(e.target.value));\n                }}\n              >\n                <option> LOCATION</option>\n                {locationsSelector.map((locati) => (\n                  <option key={locati.id} value={locati.id}>\n                    {locati.city}\n                  </option>\n                ))}\n              </Input>\n            </FormGroup>\n            <Col md={6}>\n              <FormGroup>\n                <Label>\n                  {\" \"}\n                  <strong>Age </strong>\n                </Label>\n                <Input\n                  type=\"number\"\n                  placeholder={age}\n                  value={age}\n                  onChange={(event) => set_Age(event.target.value)}\n                />\n              </FormGroup>\n            </Col>\n            <Col>\n              <legend>\n                {\" \"}\n                <strong>Gender </strong>\n              </legend>\n              <FormGroup check>\n                <Input\n                  name=\"radio1\"\n                  type=\"radio\"\n                  placeholder={gender}\n                  value={gender}\n                  onChange={() => set_Gender(!gender)}\n                />{\" \"}\n                <Label check>Man</Label>\n              </FormGroup>\n              <FormGroup check>\n                <Input\n                  name=\"radio1\"\n                  type=\"radio\"\n                  placeholder={gender}\n                  value={gender}\n                  onChange={() => set_Gender(gender)}\n                />{\" \"}\n                <Label check>Woman</Label>\n              </FormGroup>\n            </Col>\n\n            <FormGroup row>\n              <Label sm={2}>\n                {\" \"}\n                <strong>Description </strong>\n              </Label>\n              <Col sm={10}>\n                <Input\n                  type=\"textarea\"\n                  placeholder={description}\n                  value={description}\n                  onChange={(event) => set_Description(event.target.value)}\n                />\n              </Col>\n            </FormGroup>\n          </Row>\n          <FormGroup>\n            <Label>\n              <strong>Telephone Number</strong>\n            </Label>\n            <Input\n              type=\"text\"\n              placeholder=\"optional\"\n              value={telephone}\n              onChange={(event) => set_Telephone(event.target.value)}\n            />\n          </FormGroup>\n          <FormGroup>\n            <label>\n              {\" \"}\n              <strong>PICTURE PROFILE:</strong>\n            </label>\n            <input\n              value={imageUrl}\n              onChange={(event) => set_ImageUrl(event.target.value)}\n            />\n\n            <img src={imageUrl} width={300} alt=\"\" />\n          </FormGroup>\n\n          {/* <Button onClick={handleSubmit}>SUBMIT CHANGES</Button> */}\n        </Form>\n\n        {/* <Form.Group controlId=\"formBasicName\">\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            value={name}\n            onChange={(event) => setName(event.target.value)}\n            type=\"text\"\n            placeholder=\"Enter name\"\n            required\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control\n            value={email}\n            onChange={(event) => setEmail(event.target.value)}\n            type=\"email\"\n            placeholder=\"Enter email\"\n            required\n          />\n          <Form.Text className=\"text-muted\">\n            We'll never share your email with anyone else.\n          </Form.Text>\n        </Form.Group>\n\n        <Form.Group controlId=\"formBasicPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n            type=\"password\"\n            placeholder=\"Password\"\n            required\n          /> */}\n        {/* </Form.Group> */}\n        <Form.Group className=\"mt-5\">\n          <Button variant=\"primary\" type=\"submit\" onClick={submitForm}>\n            Sign up\n          </Button>\n        </Form.Group>\n        <Link to=\"/login\">Click here to log in</Link>\n      </Form>\n    </Container>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport { login } from \"../../store/user/actions\";\nimport { selectToken } from \"../../store/user/selectors\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { Col } from \"react-bootstrap\";\n\nexport default function SignUp() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const dispatch = useDispatch();\n  const token = useSelector(selectToken);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (token !== null) {\n      navigate(\"/\");\n    }\n  }, [token, navigate]);\n\n  function submitForm(event) {\n    console.log(\"hi\");\n    event.preventDefault();\n\n    dispatch(login(email, password));\n\n    setEmail(\"\");\n    setPassword(\"\");\n  }\n\n  return (\n    <Container>\n      <Form as={Col} md={{ span: 6, offset: 3 }} className='mt-5'>\n        <h1 className='mt-5 mb-5'>Login</h1>\n        <Form.Group controlId='formBasicEmail'>\n          <Form.Label>Email address</Form.Label>\n          <Form.Control\n            value={email}\n            onChange={(event) => setEmail(event.target.value)}\n            type='email'\n            placeholder='Enter email'\n            required\n          />\n        </Form.Group>\n\n        <Form.Group controlId='formBasicPassword'>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n            type='password'\n            placeholder='Password'\n            required\n          />\n        </Form.Group>\n        <Form.Group className='mt-5'>\n          <Button variant='primary' type='submit' onClick={submitForm}>\n            Log in\n          </Button>\n        </Form.Group>\n        <Link to='/signup' style={{ textAlign: \"center\" }}>\n          Click here to sign up\n        </Link>\n      </Form>\n    </Container>\n  );\n}\n","import { Card, ListGroupItem, ListGroup, Button } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { selectToken } from \"../../store/user/selectors\";\n\nexport default function DisplayHomePageCard(props) {\n  const token = useSelector(selectToken);\n\n  return (\n    <div className=\"backgroundHomePage\">\n      <div className=\"displayHomePageCard\">\n        <Card style={{ width: \"30rem\" }}>\n          <Card.Img variant=\"top\" src={props.imageUrl} />\n          <Card.Body>\n            <Card.Title>BUDDY {props.name}</Card.Title>\n            <Card.Text> {props.description}</Card.Text>\n          </Card.Body>\n          <ListGroup className=\"list-group-flush\">\n            <ListGroupItem>Level: {props.levelId}</ListGroupItem>\n            <ListGroupItem>\n              Favorite Location:\n              {props.location}\n            </ListGroupItem>\n          </ListGroup>\n\n          {!token ? (\n            <Link to={`/login`}>\n              {\" \"}\n              <Button>LOG IN</Button>{\" \"}\n            </Link>\n          ) : (\n            <Link to={`/details/${props.id}`}>\n              {\" \"}\n              <Button>CONNECT TO THE PLAYER</Button>{\" \"}\n            </Link>\n          )}\n        </Card>\n      </div>\n    </div>\n  );\n}\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport DisplayHomePageCard from \"../../components/DisplayHomePageCard/DisplayHomePageCard\";\nimport { fetchAllLevels, fetchAllPlayers } from \"../../store/user/actions\";\nimport { selectAllUsers, SelectAllLevels } from \"../../store/user/selectors\";\nimport { FormGroup } from \"react-bootstrap\";\nimport { Input, Label } from \"reactstrap\";\nimport { useState } from \"react\";\nimport { selectAlllocations } from \"../../store/locations/selectors\";\nimport { fetchAllLocations } from \"../../store/locations/actions\";\n\nfunction compareLevel(Level_A, Leve_B) {\n  return Leve_B.level?.levelRateFixed - Level_A.level?.levelRateFixed;\n}\n\nfunction compareGender(Boolean_A, Boolean_B) {\n  return Boolean_A.gender - Boolean_B.gender;\n}\n\nexport default function HomePage() {\n  const dispatch = useDispatch();\n  const players = useSelector(selectAllUsers);\n  const levels = useSelector(SelectAllLevels);\n  const locationsSelector = useSelector(selectAlllocations);\n\n  const [sortBy, set_sort_By] = useState(\"level\");\n  const [sortedPlayers, setSortedPlayers] = useState([]);\n  const [selectedLevel, setSelectedLevel] = useState(null);\n  const [location, set_Location] = useState(null);\n\n  const changeSorting = (event) => {\n    set_sort_By(event.target.value);\n  };\n\n  useEffect(() => {\n    let playersSorted = [...players].sort(\n      sortBy === \"level\" ? compareLevel : compareGender\n    );\n    if (selectedLevel) {\n      playersSorted = playersSorted.filter((player) => {\n        return player.level?.levelRateFixed.includes(selectedLevel);\n      });\n    }\n    if (location) {\n      playersSorted = playersSorted.filter((player) => {\n        return player.locationId === location;\n      });\n    }\n    setSortedPlayers(playersSorted);\n    dispatch(fetchAllLocations());\n  }, [sortBy, selectedLevel, players, location]);\n\n  useEffect(() => {\n    dispatch(fetchAllPlayers());\n    dispatch(fetchAllLevels());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <div>\n        {\" \"}\n        <FormGroup>\n          <Label for=\"exampleSelect\">FIND YOUR TENNIS BUDDY</Label>\n          <Input\n            id=\"exampleSelect\"\n            name=\"select\"\n            type=\"select\"\n            value={selectedLevel}\n            onChange={(e) => {\n              setSelectedLevel(parseFloat(e.target.value));\n            }}\n          >\n            <option>SELECT LEVEL</option>\n            {levels?.map((lev) => (\n              <option key={lev.id} value={lev.level?.levelRateFixed}>\n                {lev.levelRateFixed}\n              </option>\n            ))}\n          </Input>\n        </FormGroup>\n        <FormGroup>\n          <Input\n            id=\"exampleSelect\"\n            name=\"select\"\n            type=\"select\"\n            value={location}\n            onChange={(e) => {\n              set_Location(parseInt(e.target.value));\n            }}\n          >\n            <option> LOCATION</option>\n            {locationsSelector.map((locati) => (\n              <option key={locati.id} value={locati.id}>\n                {locati.city}\n              </option>\n            ))}\n          </Input>\n        </FormGroup>\n        <div>\n          {\" \"}\n          <Input type=\"select\" onChange={changeSorting} value={sortBy}>\n            <option value=\"level\">MEN'S BUDDY</option>\n            <option value=\"gender\">WOMEN'S BUDDY</option>\n          </Input>\n        </div>\n      </div>\n      {selectedLevel && (\n        <p>\n          Current level: <b>{selectedLevel}</b>\n        </p>\n      )}\n      {!sortedPlayers || sortedPlayers.length < 1\n        ? \"No playes with selected level\"\n        : sortedPlayers.map((player) => {\n            return (\n              <strong>\n                {\" \"}\n                <DisplayHomePageCard\n                  key={player.id}\n                  name={player.name}\n                  levelId={player.level?.levelRateFixed}\n                  imageUrl={player.imageUrl}\n                  location={player.location?.city}\n                  description={player.description}\n                  id={player.id}\n                />\n              </strong>\n            );\n          })}\n    </div>\n  );\n}\n","export const selectClubs = (state) => state.club.clubs;\n","import { Card, Button } from \"react-bootstrap\";\n\nexport default function ClubCards(props) {\n  return (\n    <div className=\"backgroundClub\">\n      <div className=\"displayClubCard\">\n        <Card style={{ width: \"18rem\" }}>\n          <Card.Img variant=\"top\" src={props.imageUrl} />\n          <Card.Body>\n            <Card.Title>{props.name}</Card.Title>\n            <Card.Text>\n              <strong>Adress: </strong>\n              {props.adress}\n            </Card.Text>\n            <Card.Text>\n              <strong> Zip Code: </strong>\n              {props.zipCode}\n            </Card.Text>\n            <Card.Text>\n              {\" \"}\n              <strong>STARS: </strong>\n              {props.rateClub}\n            </Card.Text>\n            <Card.Text>\n              {\" \"}\n              <strong>Telephone Number: </strong>\n              {props.telephone}\n            </Card.Text>\n            <Card.Text>\n              {\" \"}\n              <strong>Email: </strong>\n              {props.email}\n            </Card.Text>\n            <Button\n              variant=\"primary\"\n              onClick={(event) => (window.location.href = `${props.webSite}`)}\n            >\n              WEBSITE\n            </Button>{\" \"}\n          </Card.Body>\n        </Card>\n      </div>\n    </div>\n  );\n}\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchClubs } from \"../../store/clubs/actions\";\nimport { selectClubs } from \"../../store/clubs/selectors\";\nimport ClubCards from \"../../components/ClubsCard/ClubCards\";\n\nexport default function Clubs() {\n  const dispatch = useDispatch();\n\n  const clubs = useSelector(selectClubs);\n  console.log(\"All the clubs\", clubs);\n\n  useEffect(() => {\n    dispatch(fetchClubs());\n  }, [dispatch]);\n  return (\n    <div>\n      {!clubs\n        ? \"Loading...\"\n        : clubs.map((x) => {\n            return (\n              <ClubCards\n                key={x.id}\n                name={x.name}\n                imageUrl={x.imageUrl}\n                adress={x.adress}\n                zipCode={x.zipCode}\n                email={x.email}\n                rateClub={x.rateClub}\n                telephone={x.telephone}\n                webSite={x.webSite}\n              />\n            );\n          })}\n    </div>\n  );\n}\n","import axios from \"axios\";\n// import { showMessageWithTimeout } from \"../appState/actions\";\nimport { apiUrl } from \"../../config/constants\";\n\nexport function clubsFullyFetched(data) {\n  return {\n    type: \"CLUBS/allClubsFetched\",\n    payload: data,\n  };\n}\n\nexport function fetchClubs() {\n  return async function thunk(dispatch, getState) {\n    try {\n      //   dispatch();\n      const response = await axios.get(`${apiUrl}/clubs`);\n      //   console.log(\"response from thunk\", response.data);\n      const clubs = response.data.clubs;\n      //(ASK TO EXPLAIN WHY BECAME [] IF YOU REMOVE THE artworkAndBids FROM DATA )\n      //if is undefined get the first item like artworkAndBids but remmber to do the reducer as well\n      // const its_The_Same_name_1 = response.data.getAllSpaces;\n      // console.log(\"it is the same name 1\", its_The_Same_name_1);\n      // i went more deep and give the getAllSpaces, to have just an array otherwise could use just data\n      dispatch(clubsFullyFetched(clubs));\n    } catch (e) {}\n  };\n}\n","import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { usersWillBeUpdate, fetchAllPlayers } from \"../../store/user/actions\";\nimport { Form, Row, Col, FormGroup, Button } from \"react-bootstrap\";\nimport { Input, Label } from \"reactstrap\";\nimport { fetchAllLocations } from \"../../store/locations/actions\";\nimport {\n  selectToken,\n  selectUser,\n  selectAllUsers,\n} from \"../../store/user/selectors\";\nimport { selectAlllocations } from \"../../store/locations/selectors\";\n\nexport default function FormEditProfile() {\n  const dispatch = useDispatch();\n  const [name, set_Name] = useState(\"\");\n  const [description, set_Description] = useState(\"\");\n  const [email, set_Email] = useState(\"\");\n  const [password, set_Password] = useState(\"\");\n  const [age, set_Age] = useState(\"\");\n  const [gender, set_Gender] = useState(false);\n  const [imageUrl, set_ImageUrl] = useState(\"\");\n  const [levelId, set_LevelId] = useState(\"\");\n  const [location, set_location] = useState(null);\n  const [telephone, set_Telephone] = useState(\"\");\n\n  const players = useSelector(selectAllUsers);\n\n  const user = useSelector(selectUser);\n\n  const locationsSelector = useSelector(selectAlllocations);\n  console.log(\"locations selector\", locationsSelector);\n\n  const token = useSelector(selectToken);\n\n  const handleSubmit = () => {\n    dispatch(\n      usersWillBeUpdate({\n        name,\n        age,\n        description,\n        email,\n        gender,\n        imageUrl,\n        levelId,\n        location,\n        telephone,\n        password,\n        token,\n      })\n    );\n  };\n\n  useEffect(() => {\n    dispatch(fetchAllPlayers());\n    dispatch(fetchAllLocations());\n  }, []);\n  return (\n    <div>\n      <Form className=\"test\">\n        <Row form>\n          <FormGroup>\n            <Label>\n              <strong>Name</strong>\n            </Label>\n            <Input\n              placeholder={user.name}\n              value={name}\n              onChange={(event) => set_Name(event.target.value)}\n            />\n          </FormGroup>\n          <Col md={6}>\n            <FormGroup>\n              <Label>\n                {\" \"}\n                <strong>Email </strong>\n              </Label>\n              <Input\n                type=\"email\"\n                placeholder={user.email}\n                value={email}\n                onChange={(event) => set_Email(event.target.value)}\n              />\n            </FormGroup>\n          </Col>\n          <Col md={6}>\n            <FormGroup>\n              <Label>\n                {\" \"}\n                <strong> Password </strong>\n              </Label>\n              <Input\n                type=\"password\"\n                placeholder={user.password}\n                value={password}\n                onChange={(event) => set_Password(event.target.value)}\n              />\n            </FormGroup>\n          </Col>\n        </Row>\n\n        <Row form>\n          <FormGroup>\n            <Label>\n              {\" \"}\n              <strong>FAVORITE LOCATION </strong>\n            </Label>\n            <Input\n              id=\"exampleSelect\"\n              name=\"select\"\n              type=\"select\"\n              value={location}\n              onChange={(e) => {\n                set_location(parseInt(e.target.value));\n              }}\n            >\n              <option> LOCATION</option>\n              {locationsSelector.map((locati) => (\n                <option key={locati.id} value={locati.id}>\n                  {locati.city}\n                </option>\n              ))}\n            </Input>\n          </FormGroup>\n\n          <Col md={6}>\n            <FormGroup>\n              <Label>\n                {\" \"}\n                <strong>Age </strong>\n              </Label>\n              <Input\n                type=\"number\"\n                placeholder={user.age}\n                value={age}\n                onChange={(event) => set_Age(event.target.value)}\n              />\n            </FormGroup>\n          </Col>\n          <Col>\n            <legend>\n              {\" \"}\n              <strong>Gender </strong>\n            </legend>\n            <FormGroup check>\n              <Input\n                name=\"radio1\"\n                type=\"radio\"\n                placeholder={gender}\n                value={gender}\n                onChange={() => set_Gender(!gender)}\n              />{\" \"}\n              <Label check>Man</Label>\n            </FormGroup>\n            <FormGroup check>\n              <Input\n                name=\"radio1\"\n                type=\"radio\"\n                placeholder={gender}\n                value={gender}\n                onChange={() => set_Gender(gender)}\n              />{\" \"}\n              <Label check>Woman</Label>\n            </FormGroup>\n          </Col>\n\n          <FormGroup row>\n            <Label sm={2}>\n              {\" \"}\n              <strong>Description </strong>\n            </Label>\n            <Col sm={10}>\n              <Input\n                type=\"textarea\"\n                placeholder={user.description}\n                value={description}\n                onChange={(event) => set_Description(event.target.value)}\n              />\n            </Col>\n          </FormGroup>\n        </Row>\n        <FormGroup>\n          <Label>\n            <strong>Telephone Number</strong>\n          </Label>\n          <Input\n            type=\"text\"\n            placeholder=\"optional\"\n            value={telephone}\n            onChange={(event) => set_Telephone(event.target.value)}\n          />\n        </FormGroup>\n        <FormGroup>\n          <label>\n            {\" \"}\n            <strong>PICTURE PROFILE:</strong>\n          </label>\n          <input\n            value={imageUrl}\n            onChange={(event) => set_ImageUrl(event.target.value)}\n          />\n\n          <img src={imageUrl} width={300} alt=\"\" />\n        </FormGroup>\n\n        <Button\n          style={{ marginTop: 30 }}\n          onClick={handleSubmit}\n          style={{ marginBottom: 90 }}\n        >\n          SUBMIT CHANGES\n        </Button>\n      </Form>\n    </div>\n  );\n}\n","import { Card, Button } from \"react-bootstrap\";\n\nexport default function UserProfileCard(props) {\n  return (\n    <div>\n      <Card style={{ width: \"18rem\" }}>\n        <Card.Img variant=\"top\" src={props.imageUrl} />\n        <Card.Body>\n          <Card.Title>{props.name}</Card.Title>\n          <Card.Text>\n            <strong>Age: </strong>\n            {props.age}\n          </Card.Text>\n          <Card.Text>\n            <strong> Gender: </strong>\n            {props.gender}\n          </Card.Text>\n          <Card.Text>\n            {\" \"}\n            <strong>Location: </strong>\n            {props.location}\n          </Card.Text>\n          <Card.Text>\n            {\" \"}\n            <strong>Telephone Number: </strong>\n            {props.telephone}\n          </Card.Text>\n          <Card.Text>\n            {\" \"}\n            <strong>Email: </strong>\n            {props.email}\n          </Card.Text>\n          <Card.Text>\n            {\" \"}\n            <strong>Level: </strong>\n            {props.levelId}\n          </Card.Text>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n}\n","import { useDispatch, useSelector } from \"react-redux\";\nimport FormEditProfile from \"../../components/Forms/FormEditProfile\";\nimport UserProfileCard from \"../../components/UserProfileCard/UserProfileCard\";\nimport { selectUser, selectUsersById } from \"../../store/user/selectors\";\nimport { useEffect } from \"react\";\nimport { ShowPlayerByID } from \"../../store/user/actions\";\n\nexport default function UserProfile() {\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n  console.log(\"users \", user.id);\n  const id = user.id;\n\n  const playerById = useSelector(selectUsersById);\n  console.log(\"player by id\", playerById);\n\n  useEffect(() => {\n    if (playerById) {\n      dispatch(ShowPlayerByID(id));\n    }\n  }, [dispatch, id]);\n  return (\n    <div className=\"userProfileBackGround\">\n      <strong>\n        {\" \"}\n        <h1 className=\"userProfileTitle\"> {user.name} BUDDY PROFILE</h1>{\" \"}\n      </strong>\n      {!user ? (\n        \"Loading ... \"\n      ) : (\n        <div className=\"userProfile\">\n          <UserProfileCard\n            key={playerById.id}\n            email={playerById.email}\n            gender={playerById.gender ? \"Man\" : \"Woman\"}\n            imageUrl={playerById.imageUrl}\n            levelId={playerById.level?.levelRateFixed}\n            location={playerById.location?.city}\n            name={playerById.name}\n            telephone={playerById.telephone}\n            age={playerById.age}\n          />\n          <strong>\n            {\" \"}\n            <FormEditProfile className=\"formEditProfile\" />\n          </strong>\n        </div>\n      )}\n    </div>\n  );\n}\n","import { apiUrl } from \"../../config/constants\";\nimport axios from \"axios\";\nimport { showMessageWithTimeout } from \"../appState/actions\";\n\nexport function levelPlayerById(id) {\n  return {\n    type: \"PLAYERS/playerById\",\n    payload: id,\n  };\n}\n\nexport function levelPlayerByID(id, levelId) {\n  return async function thunk(dispatch, getState) {\n    try {\n      const { user } = getState();\n      const id = user.id;\n      console.log(\"What is this id\", id);\n      const token = localStorage.getItem(\"token\");\n\n      const response = await axios.put(\n        `${apiUrl}/levels/update/${id}/${levelId}`,\n\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n      console.log(\"response from thunk\", response.data);\n\n      const levelUpdate = response.data;\n\n      dispatch(levelPlayerById(levelUpdate));\n\n      dispatch(\n        showMessageWithTimeout(\n          \"success\",\n          true,\n          \"Your level was successfuly updated!!!\"\n        )\n      );\n    } catch (e) {}\n  };\n}\n","import { useEffect, useState } from \"react\";\nimport { InputGroup, Card } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchAllLevels } from \"../../store/user/actions\";\nimport { SelectAllLevels, selectUser } from \"../../store/user/selectors\";\nimport { levelPlayerByID } from \"../../store/players/actions\";\nimport { Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Levels() {\n  const dispatch = useDispatch();\n  const userLogged = useSelector(selectUser);\n  const levels = useSelector(SelectAllLevels);\n\n  const [check, set_Check] = useState(\"\");\n  const id = userLogged?.id;\n\n  const handleSubmit = () => {\n    dispatch(levelPlayerByID(id, check));\n    console.log(\"id check\", id, check);\n  };\n\n  useEffect(() => {\n    dispatch(fetchAllLevels());\n  }, [dispatch]);\n  return (\n    <div className=\"backgroundLevel\">\n      <div>\n        <h1 className=\"levelUtr\">\n          {\" \"}\n          <strong>LEVEL UTR </strong>\n        </h1>\n      </div>\n      <div className=\"levelsAllPage\">\n        {!levels ? (\n          \"Loading...\"\n        ) : (\n          <div className=\"levels\">\n            {levels.map((x) => {\n              return (\n                <div key={x.id} style={{ margin: 10 }}>\n                  <Card style={{ width: \"30rem\" }}>\n                    <h2> Level {x.levelRateFixed}</h2>\n                  </Card>\n                  <Card style={{ width: \"30rem\" }}>\n                    <h5>{x.description}</h5>\n                  </Card>\n\n                  <Card style={{ width: \"30rem\" }}>\n                    <InputGroup.Checkbox\n                      style={{ width: \" 2rem\", height: \"2rem\" }}\n                      className=\"checkbox\"\n                      aria-label=\"level\"\n                      onChange={(event) => set_Check(x.id)}\n                    />\n                  </Card>\n                </div>\n              );\n            })}\n            <Link to={`/`}>\n              <Button className=\"btlUtr\" onClick={handleSubmit}>\n                {\" \"}\n                SUBMIT YOUR LEVEL\n              </Button>\n            </Link>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import axios from \"axios\";\nimport { apiUrl } from \"../../config/constants\";\nimport { showMessageWithTimeout } from \"../appState/actions\";\n\nexport function newStory(content) {\n  return {\n    type: \"STORIES/newStory\",\n    payload: content,\n  };\n}\n\nexport function createNewStory({ content, token, id }) {\n  return async function thunk(dispatch, getState) {\n    try {\n      const response = await axios.post(\n        `${apiUrl}/stories/${id}`,\n        {\n          content,\n        },\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n      console.log(\"My token\", token);\n      console.log(\"response from thunk\", response);\n\n      dispatch(newStory(response.data));\n      dispatch(fetchStories(id, token));\n      dispatch(\n        showMessageWithTimeout(\"success\", false, \"Message sent to the BUDDY!\")\n      );\n    } catch (e) {}\n  };\n}\n\nexport function showStories(data) {\n  return {\n    type: \"STORIES/showStories\",\n    payload: data,\n  };\n}\n\nexport function fetchStories(id, token) {\n  return async function thunk(dispatch, getState) {\n    try {\n      const response = await axios.get(\n        `${apiUrl}/stories/stories/${id}`,\n\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n\n      dispatch(showStories(response.data.stories));\n    } catch (e) {}\n  };\n}\n","export const selectStoriesByPlayer = (state) => state.stories.stories;\n","// import DetailsPlayerCard from \"../../components/DetailsPlayerCard/DetailsPlayerCard\";\nimport { useParams } from \"react-router\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ShowPlayerByID } from \"../../store/user/actions\";\nimport { createNewStory } from \"../../store/stories/actions\";\nimport { Form } from \"react-bootstrap\";\nimport { CardBody, CardSubtitle, Card, CardTitle, Input } from \"reactstrap\";\nimport { CardText } from \"reactstrap\";\nimport { fetchStories } from \"../../store/stories/actions\";\nimport { selectStoriesByPlayer } from \"../../store/stories/selectors\";\nimport { selectToken, selectUsersById } from \"../../store/user/selectors\";\nimport { useState } from \"react\";\n\nexport default function PlayerDetails() {\n  const dispatch = useDispatch();\n  const { id } = useParams();\n\n  const [content, set_Content] = useState(\"\");\n  const [formHidden, set_FormHidden] = useState(true);\n\n  const token = useSelector(selectToken);\n\n  const details = useSelector(selectUsersById);\n  // console.log(\"details\", details);\n\n  const stories = useSelector(selectStoriesByPlayer);\n  // console.log(\"stories\", stories);\n\n  const handleSubmmit = (event) => {\n    event.preventDefault();\n\n    dispatch(createNewStory({ content, token, id }));\n    set_Content(\"\");\n  };\n\n  useEffect(() => {\n    if (id) {\n      dispatch(ShowPlayerByID(id));\n      dispatch(fetchStories(id));\n    }\n  }, [id]);\n\n  return (\n    <div className=\"playerDetails\">\n      {!details ? (\n        \"Loading ...\"\n      ) : (\n        <div>\n          <Card style={{ width: \"50rem\" }} className=\"playerDetailsBigCard\">\n            <CardBody>\n              <CardTitle tag=\"h5\">\n                {\" \"}\n                <strong>{details.name} BUDDY </strong>\n              </CardTitle>\n              <CardSubtitle className=\"mb-2 text-muted\" tag=\"h6\">\n                Level: {details.level?.levelRateFixed}{\" \"}\n              </CardSubtitle>{\" \"}\n              <CardSubtitle className=\"mb-2 text-muted\" tag=\"h6\">\n                Description: {details.level?.description}\n              </CardSubtitle>\n            </CardBody>\n            <img alt=\"Card image cap\" src={details.imageUrl} width=\"50%\" />\n            <CardBody>\n              <CardText>\n                <strong>Favorite Location: {details.location?.city} </strong>\n              </CardText>\n              <CardText>\n                {\" \"}\n                <strong>Moto: {details.description} </strong>\n              </CardText>\n              <CardText>\n                {\" \"}\n                <strong>Gender: {details.gender ? \"Man\" : \"Woman\"} </strong>\n              </CardText>\n              <CardText>\n                {\" \"}\n                <strong>Age: {details.age} </strong>\n              </CardText>\n              <CardText>\n                {\" \"}\n                <strong>Contact me : </strong>\n              </CardText>\n              <CardText>\n                {\" \"}\n                <strong>Email: {details.email}</strong>\n              </CardText>\n              <CardText>\n                {\" \"}\n                <strong>Telephone: {details.telephone}</strong>\n              </CardText>\n            </CardBody>\n          </Card>\n          <div>\n            <button\n              className=\"btPlayerDetails\"\n              onClick={() => {\n                set_FormHidden(!formHidden);\n              }}\n            >\n              POST A MESSAGE TO {details.name} BUDDY\n            </button>\n            <div>\n              {\" \"}\n              {!formHidden ? (\n                <div>\n                  <Form>\n                    <ul>\n                      {\" \"}\n                      <label>\n                        <strong>WRITE YOUR MESSAGE HERE</strong>\n                      </label>\n                      <Input\n                        value={content}\n                        onChange={(event) => set_Content(event.target.value)}\n                      />\n                      <div>\n                        {\" \"}\n                        <button onClick={handleSubmmit}>\n                          SAVE YOUR MESSAGE\n                        </button>\n                      </div>\n                    </ul>\n                  </Form>\n                </div>\n              ) : (\n                \"\"\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n      <div>\n        {!stories ? (\n          \"Loading ...\"\n        ) : (\n          <div>\n            {stories?.map((story) => {\n              return (\n                <div key={story.id} className=\"storiesPlayerDetails\">\n                  <h5>\n                    <h3>\n                      {story?.content}\n                      <img src={story?.imageUrl} alt=\"Avatar\"></img>\n                    </h3>\n                    Message from: <b>{story.name}</b>\n                  </h5>\n                </div>\n              );\n            })}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n// location={matches.location?.city}\n","export const selectChatSender = (state) => state.chats.chats;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\n\nimport Box from \"@mui/material/Box\";\n// import Box from \"@mui/material/Box”;\nimport TextField from \"@mui/material/TextField\";\n\n// import CommentIcon from \"@mui/icons-material/Comment\";\n// import CommentIcon from \"@mui/icons-material/Comment”;\nimport Button from \"@mui/material/Button\";\n\nimport { selectUser } from \"../../store/user/selectors\";\n// import { selectChefUser } from \"../../store/ChefUser/selectors”;\nimport {\n  fetchChatsById,\n  fetchChatsByIdReceiver,\n} from \"../../store/chats/actions\";\nimport { selectChatSender } from \"../../store/chats/selector\";\n\nimport(\"./style.css\");\n\nexport default function Chat() {\n  const [book, setBook] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  //   const { id } = useParams();\n  const dispatch = useDispatch();\n\n  //   const messagesChef = useSelector(selectMessages);\n  const user = useSelector(selectUser);\n  const id = user.id;\n\n  const sender = useSelector(selectChatSender);\n  console.log(\"Sender\", sender);\n  //   const chef = useSelector(selectChefUser);\n  useEffect(() => {\n    if (id) {\n      dispatch(fetchChatsById(id));\n      dispatch(fetchChatsByIdReceiver(id));\n      // dispatch(fetchMessages(id));\n    }\n  }, [dispatch, id]);\n  function submitForm(event) {\n    event.preventDefault();\n    // dispatch(\n    //   createMessages(\n    //     id,\n    //     message,\n    //     chef ? chef.chef?.id : null,\n    //     user ? user?.id : null\n    //   )\n    // );\n    setBook(false);\n    setMessage(\"\");\n  }\n  console.log(\"what is id\", id);\n  //   console.log(\"what is message\", messagesChef);\n\n  return (\n    <div className=\"PageChat\">\n      <div>\n        <h4 style={{ textAlign: \"center \" }}>Messages:</h4>\n      </div>\n      <br />\n      {/* {messagesChef\n        ? messagesChef.map((message) => {\n            if (message.chefId) {\n              return (\n                <div class=\"message-blue\">\n                  <p class=\"message-content\">\n                    {chef.chef ? (\n                      \"You\"\n                    ) : (\n                      <div>Chef {message.chef?.fullName}</div>\n                    )}\n                    : {message.message}\n                  </p>\n                </div>\n              );\n            } else if (message.userId) {\n              return (\n                <div class=\"message-orange\">\n                  <p class=\"message-content\">\n                    {user ? \"You\" : <div>User {message.user?.name}</div>}:{\" \"}\n                    {message.message}\n                  </p>\n                </div>\n              );\n            } else {\n              return \"\";\n            }\n          })\n        : \"\"} */}\n      <div>\n        <Button\n          variant=\"contained\"\n          //   startIcon={<CommentIcon />}\n          style={{\n            width: 120,\n            height: 40,\n            marginTop: 60,\n            marginLeft: 100,\n          }}\n          onClick={() => setBook(!book)}\n        >\n          Message\n        </Button>\n      </div>\n      <div>\n        {book ? (\n          <div>\n            <h4 style={{ marginTop: 20 }}>Create your message:</h4>\n            <Box\n              component=\"form\"\n              sx={{\n                \"& .MuiTextField-root\": { m: 1, width: \"25ch\" },\n              }}\n              noValidate\n              autoComplete=\"off\"\n            >\n              <TextField\n                id=\"outlined-multiline-flexible\"\n                label=\"Informations\"\n                multiline\n                rows={4}\n                style={{ width: 400 }}\n                value={message}\n                onChange={(e) => setMessage(e.target.value)}\n              />\n              <br />\n              <Button\n                variant=\"contained\"\n                style={{ marginLeft: 20 }}\n                onClick={submitForm}\n                type=\"submit\"\n              >\n                Send!\n              </Button>\n            </Box>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n    </div>\n  );\n}\n","import { apiUrl } from \"../../config/constants\";\nimport axios from \"axios\";\n\nexport function allLChats(data) {\n  return {\n    type: \"CHATS/selectAllChats\",\n    payload: data,\n  };\n}\n\nexport function chatsById(data) {\n  return {\n    type: \"CHATS/chatsById\",\n    payload: data,\n  };\n}\n\nexport function chatsByIdReceiver(data) {\n  return {\n    type: \"CHATS/Receiver\",\n    payload: data,\n  };\n}\n\nexport function fetchAllChats() {\n  return async function thunk(dispatch, getState) {\n    try {\n      const token = localStorage.getItem(\"token\");\n\n      const response = await axios.get(\n        `${apiUrl}/chats`,\n\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n      console.log(\"response from thunk\", response.data);\n\n      const chats = response.data;\n\n      dispatch(allLChats(chats));\n    } catch (e) {}\n  };\n}\n\n//SENDER\nexport function fetchChatsById(id) {\n  return async function thunk(dispatch, getState) {\n    try {\n      const token = localStorage.getItem(\"token\");\n\n      const response = await axios.get(\n        `${apiUrl}/chats/sender/${id}`,\n\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n      console.log(\"response from thunk\", response.data);\n\n      const chatsById = response.data;\n\n      dispatch(chatsById(chatsById));\n    } catch (e) {}\n  };\n}\n\n//RECEIVER\nexport function fetchChatsByIdReceiver(id) {\n  return async function thunk(dispatch, getState) {\n    try {\n      const token = localStorage.getItem(\"token\");\n\n      const response = await axios.get(\n        `${apiUrl}/chats/receiver/${id}`,\n\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n      console.log(\"response from thunk\", response.data);\n\n      const chatsByIdReceiver = response.data;\n\n      dispatch(chatsByIdReceiver(chatsByIdReceiver));\n    } catch (e) {}\n  };\n}\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\n\nimport { Routes, Route } from \"react-router-dom\";\nimport Navigation from \"./components/Navigation\";\nimport Loading from \"./components/Loading\";\nimport MessageBox from \"./components/MessageBox\";\nimport SignUp from \"./pages/SignUp\";\nimport Login from \"./pages/Login\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectAppLoading } from \"./store/appState/selectors\";\nimport { getUserWithStoredToken } from \"./store/user/actions\";\n\nimport HomePage from \"./pages/HomePage/HomePage\";\nimport Clubs from \"./pages/Clubs/Clubs\";\nimport UserProfile from \"./pages/UserProfile/UserProfile\";\nimport Levels from \"./pages/Levels/Levels\";\nimport MatchesPlayed from \"./pages/Matches/MatchesPlayed\";\nimport PlayerDetails from \"./pages/PlayerDetails/PlayerDetails\";\nimport Chat from \"./pages/Chats/Chats\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectAppLoading);\n\n  useEffect(() => {\n    dispatch(getUserWithStoredToken());\n  }, [dispatch]);\n\n  return (\n    <div className=\"App\">\n      <Navigation />\n      <MessageBox />\n      {isLoading ? <Loading /> : null}\n      <Routes>\n        <Route exact path=\"/\" element={<HomePage />} />\n        <Route path=\"/clubs\" element={<Clubs />} />\n        <Route path=\"/signup\" element={<SignUp />} />\n        <Route path=\"/login\" element={<Login />} />\n        <Route path=\"/uprofile\" element={<UserProfile />} />\n        <Route path=\"/levels\" element={<Levels />} />\n        <Route path=\"/matches\" element={<MatchesPlayed />} />\n        <Route path=\"/details/:id\" element={<PlayerDetails />} />\n        <Route path=\"/chats\" element={<Chat />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n  APP_LOADING,\n  APP_DONE_LOADING,\n  SET_MESSAGE,\n  CLEAR_MESSAGE,\n} from \"./actions\";\n\nconst initialState = {\n  loading: false,\n  message: null,\n};\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case APP_LOADING:\n      return { ...state, loading: true };\n\n    case APP_DONE_LOADING:\n      return { ...state, loading: false };\n\n    case SET_MESSAGE:\n      return { ...state, message: action.payload };\n\n    case CLEAR_MESSAGE:\n      return { ...state, message: null };\n\n    default:\n      return state;\n  }\n};\n","import { LOG_OUT, LOGIN_SUCCESS, TOKEN_STILL_VALID } from \"./actions\";\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  name: null,\n  email: null,\n  players: [],\n  playerById: {},\n};\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN_SUCCESS:\n      localStorage.setItem(\"token\", action.payload.token);\n      return { ...state, ...action.payload };\n\n    case LOG_OUT:\n      localStorage.removeItem(\"token\");\n      return { ...initialState, token: null };\n\n    case TOKEN_STILL_VALID:\n      return { ...state, ...action.payload };\n    case \"USER/displayPlayers\": {\n      return { ...state, players: [...action.payload] };\n    }\n    case \"USER/displayLevels\": {\n      return { ...state, ...action.payload };\n    }\n    case \"USERS/userToUpdate\": {\n      console.log(\"action user\", action.payload);\n      return {\n        ...state,\n        ...action.payload,\n      };\n    }\n    case \"USER/displayMatches\": {\n      return {\n        ...state,\n        match: action.payload.userById,\n      };\n    }\n    case \"USER/displayLevelLocation\": {\n      return {\n        ...state,\n        ...action.payload,\n      };\n    }\n    case \"USER/playerById\": {\n      return {\n        ...state,\n        playerById: { ...action.payload },\n      };\n    }\n    case \"USER/displayWinner\": {\n      return {\n        ...state,\n        ...action.payload,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n","// src/store/artow/reducer.js\nconst initialState = {\n  clubs: [],\n};\n\nexport default function reducer(state = initialState, action) {\n  // console.log(\"home reducer reveived\", action);\n  switch (action.type) {\n    case \"CLUBS/allClubsFetched\": {\n      console.log(\"CLUBS/allClubsFetched from the reducer\", action.payload);\n      return {\n        ...state,\n        clubs: action.payload,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","const initialState = {\n  matches: [],\n  matchesPlayed: [],\n  matchesPlayedPicture: [],\n  sets: [],\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case \"MATCHES/allMatchesFetched\": {\n      return {\n        ...state,\n        matches: action.payload,\n      };\n    }\n    case \"MATCHES/findMatchId\": {\n      return {\n        ...state,\n        matchesPlayed: action.payload,\n      };\n    }\n\n    case \"MATCHES/getPlayersTroughMatchId\":\n      return {\n        ...state,\n        matchesPlayedPicture: action.payload,\n      };\n    case \"MATCHES/getSetsMatchId\": {\n      console.log(\"MATCHES/getSetsMatchId from the reducer\", action.payload);\n      return {\n        ...state,\n        sets: action.payload,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","const initialState = {\n  players: [],\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case \"PLAYERS/playerById\": {\n      console.log(\"PLAYERS/playerById from the reducer\", action.payload);\n      return {\n        ...state,\n        players: action.payload,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","const initialState = {\n  stories: [],\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case \"STORIES/newStory\": {\n      return {\n        ...state,\n      };\n    }\n    case \"STORIES/showStories\": {\n      return {\n        ...state,\n        stories: action.payload,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","const initialState = {\n  locations: [],\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case \"LOCATIONS/selectAllLocations\": {\n      console.log(\n        \"LOCATIONS/selectAllLocations from the reducer\",\n        action.payload\n      );\n      return {\n        ...state,\n        ...action.payload,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","const initialState = {\n  chats: [],\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case \"CHATS/selectAllChats\": {\n      //   console.log(\"CHATS/selectAllChats from the reducer\", action.payload);\n      return {\n        ...state,\n        ...action.payload,\n      };\n    }\n    case \"CHATS/chatsById\": {\n      console.log(\"CHATS/chatsById from the reducer\", action.payload);\n      return {\n        ...state,\n        ...action.payload,\n      };\n    }\n    case \"CHATS/Receiver\": {\n      console.log(\"CHATS/Receiver from the reducer\", action.payload);\n      return {\n        ...state,\n        ...action.payload,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import { combineReducers } from \"redux\";\nimport appState from \"./appState/reducer\";\nimport user from \"./user/reducer\";\nimport club from \"./clubs/reducer\";\nimport matches from \"./matches/reducer\";\nimport players from \"./players/reducer\";\nimport stories from \"./stories/reducer\";\nimport locations from \"./locations/reducer\";\nimport chats from \"./chats/reducer\";\n\nexport default combineReducers({\n  appState,\n  user,\n  club,\n  matches,\n  players,\n  stories,\n  locations,\n  chats,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\n\nimport ReduxThunk from \"redux-thunk\";\nimport reducer from \"./rootReducer\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst enhancer = composeEnhancers(applyMiddleware(ReduxThunk));\n\nconst store = createStore(reducer, enhancer);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}